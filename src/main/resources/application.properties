# jwt
app.jwtSecret=mysecret
app.jwtExpirationInHs=1

# user registration confirmation token
userservice.user-registration-confirmation-token.hsLifetime=1
userservice.user-registration-confirmation-token.maxFailedCount=5

# Generic mail
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
userservice.service-mail.sentFrom="DriveDynamics"

# mail (email account properties to enable service to send emails)
# Real credentials should not be stored in code, this is done for demos only
# These credentials should be retrieved from AWS KMS, if service would be deployed on AWS (for example)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=YourExample@Your.mail
spring.mail.password=yourveryverysecretpassword

# H2 db (should be replaced by Postgres in future)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Disable automatic table generation
spring.jpa.hibernate.ddl-auto=none